---
# PostgreSQL StatefulSet for persistent database storage.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: uber-service
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: "postgres"
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:17.4
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_DB
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi

---
# Headless service for PostgreSQL, used for internal DNS and StatefulSet.
apiVersion: v1
kind: Service
metadata:
  name: postgres-headless
  namespace: uber-service
spec:
  clusterIP: None
  ports:
    - port: 5432
  selector:
    app: postgres

---
# PostgreSQL LoadBalancer service for external access (if needed).
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: uber-service
spec:
  type: LoadBalancer
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432

---
# Kafka UI Deployment for managing and monitoring Kafka topics and messages.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: uber-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
        - name: kafka-ui
          image: provectuslabs/kafka-ui:latest
          ports:
            - containerPort: 8080
          env:
            - name: KAFKA_CLUSTERS_0_NAME
              value: local-kafka
            - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
              value: kafka-headless.uber-service.svc.cluster.local:9092
            - name: KAFKA_CLUSTERS_0_SCHEMAREGISTRY
              value: http://schema-registry:8081

