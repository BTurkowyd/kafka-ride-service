---
# Kafka Producer Deployment for ingesting ride events into Kafka.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-producer
  namespace: uber-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kafka-producer
  template:
    metadata:
      labels:
        app: kafka-producer
    spec:
      containers:
        - name: kafka-producer
          image: uber-producer:latest
          imagePullPolicy: Never
          command: ["uvicorn", "producer.main:app",  "--host", "0.0.0.0", "--port",  "8888"]
          env:
            # Kafka and database connection environment variables
            - name: KAFKA_BROKER
              value: kafka.uber-service.svc.cluster.local:9092
            - name: SCHEMA_REGISTRY_URL
              value: http://schema-registry.uber-service.svc.cluster.local:8081
            - name: POSTGRES_HOST
              value: postgres.uber-service.svc.cluster.local
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - containerPort: 8888
            
---
# Service for exposing the Kafka producer API.
apiVersion: v1
kind: Service
metadata:
  name: kafka-producer
  namespace: uber-service
spec:
  selector:
    app: kafka-producer
  ports:
    - protocol: TCP
      port: 8888
      targetPort: 8888
  type: LoadBalancer

---
# HorizontalPodAutoscaler for the Kafka producer deployment.
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: kafka-producer-hpa
  namespace: uber-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: kafka-producer
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 60
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 30
