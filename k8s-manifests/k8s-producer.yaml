---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-producer
  namespace: uber-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-producer
  template:
    metadata:
      labels:
        app: kafka-producer
    spec:
      containers:
        - name: kafka-producer
          image: uber-producer:latest
          imagePullPolicy: Never
          command: ["uvicorn", "producer.main:app",  "--host", "0.0.0.0", "--port",  "8888"]
          env:
            - name: KAFKA_BROKER
              value: kafka.uber-service.svc.cluster.local:9092
            - name: SCHEMA_REGISTRY_URL
              value: http://schema-registry.uber-service.svc.cluster.local:8081
            - name: POSTGRES_HOST
              value: postgres.uber-service.svc.cluster.local
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
          resources:
            limits:
              memory: "256Mi"
              cpu: "250m"
          ports:
            - containerPort: 8888
            
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-producer
  namespace: uber-service
spec:
  selector:
    app: kafka-producer
  ports:
    - protocol: TCP
      port: 8888
      targetPort: 8888
  type: LoadBalancer

